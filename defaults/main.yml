---

telegraf_install_user: root

# Write config
telegraf_group: root
telegraf_user: root
telegraf_config_dir: "/etc/telegraf"
telegraf_config_file: "telegraf.conf"

# Below this line, you will find all configurable variable for the config_file

telegraf__conf__global_tags:

# [agent]

telegraf__conf__agent__interval: "10s"
telegraf__conf__agent__round_interval: true
telegraf__conf__agent__metric_batch_size: 1000
telegraf__conf__agent__metric_buffer_limit:  10000
telegraf__conf__agent__collection_jitter: "0s"
telegraf__conf__agent__flush_interval: "10s"
telegraf__conf__agent__flush_jitter: "0s"
telegraf__conf__agent__debug: false
telegraf__conf__agent__quiet: false
telegraf__conf__agent__hostname: ""
telegraf__conf__agent__omit_hostname: false

# [[outputs.influxdb]]

telegraf__conf__outputs__influxdb__enabled: true
telegraf__conf__outputs__influxdb__urls:
    - "http://localhost:8086"
telegraf__conf__outputs__influxdb__database: "telegraf"
telegraf__conf__outputs__influxdb__precision: "s"
telegraf__conf__outputs__influxdb__retention_policy: "default"
telegraf__conf__outputs__influxdb__write_consistency: "any"
telegraf__conf__outputs__influxdb__timeout: "5s"
telegraf__conf__outputs__influxdb__username: ""
telegraf__conf__outputs__influxdb__password: ""
telegraf__conf__outputs__influxdb__user_agent: ""
telegraf__conf__outputs__influxdb__udp_payload: 512
telegraf__conf__outputs__influxdb__ssl__enabled: false
telegraf__conf__outputs__influxdb__ssl__ssl_ca: "/etc/telegraf/ca.pem"
telegraf__conf__outputs__influxdb__ssl__ssl_cert: "/etc/telegraf/cert.pem"
telegraf__conf__outputs__influxdb__ssl__ssl_key: "/etc/telegraf/key.pem"
telegraf__conf__outputs__influxdb__ssl__insecure_skip_verify: false

# [[outputs.amon]]

telegraf__conf__outputs__amon__enabled: false
telegraf__conf__outputs__amon__server_key: "my-server-key"
telegraf__conf__outputs__amon__amon_instance: "https://youramoninstance"
telegraf__conf__outputs__amon__timeout: "5s"

# [[outputs.amqp]]

telegraf__conf__outputs__amqp__enabled: false
telegraf__conf__outputs__amqp__url: "amqp://localhost:5672/influxdb"
telegraf__conf__outputs__amqp__exchange: "telegraf"
telegraf__conf__outputs__amqp__auth_method: "PLAIN"
telegraf__conf__outputs__amqp__routing_tag: "host"
telegraf__conf__outputs__amqp__retention_policy: "default"
telegraf__conf__outputs__amqp__database: "telegraf"
telegraf__conf__outputs__amqp__precision: "s"
telegraf__conf__outputs__amqp__ssl__enabled: false
telegraf__conf__outputs__amqp__ssl__ssl_ca: "/etc/telegraf/ca.pem"
telegraf__conf__outputs__amqp__ssl__ssl_cert: "/etc/telegraf/cert.pem"
telegraf__conf__outputs__amqp__ssl__ssl_key: "/etc/telegraf/key.pem"
telegraf__conf__outputs__amqp__ssl__insecure_skip_verify: false
telegraf__conf__outputs__amqp__data_format: "influx"

# [[outputs.cloudwatch]]

telegraf__conf__outputs__cloudwatch__enabled: false
telegraf__conf__outputs__cloudwatch__region: "us-east-1"
telegraf__conf__outputs__cloudwatch__access_key: ""
telegraf__conf__outputs__cloudwatch__secret_key: ""
telegraf__conf__outputs__cloudwatch__namespace: "InfluxData/Telegraf"

# [[outputs.datadog]]

telegraf__conf__outputs__datadog__enabled: false
telegraf__conf__outputs__datadog__apikey: "my-secret-key"
telegraf__conf__outputs__datadog__timeout: "5s"

# [[outputs.file]]

telegraf__conf__outputs__file__enabled: false
telegraf__conf__outputs__file__files:
    - "stdout"
    - "/tmp/metrics.out"
telegraf__conf__outputs__file__data_format: "influx"

# [[outputs.graphite]]

telegraf__conf__outputs__graphite__enabled: false
telegraf__conf__outputs__graphite__servers:
    - "localhost:2003"
telegraf__conf__outputs__graphite__prefix: ""
telegraf__conf__outputs__graphite__template: "host.tags.measurement.field"
telegraf__conf__outputs__graphite__timeout: 2

# [[outputs.instrumental]]

telegraf__conf__outputs__instrumental__enabled: false
telegraf__conf__outputs__instrumental__api_token: "API Token"
telegraf__conf__outputs__instrumental__prefix: ""
telegraf__conf__outputs__instrumental__template: "host.tags.measurement.field"
telegraf__conf__outputs__instrumental__timeout: "2s"
telegraf__conf__outputs__instrumental__debug: false

# [[outputs.kafka]]

telegraf__conf__outputs__kafka__enabled: false
telegraf__conf__outputs__kafka__brokers:
    - "localhost:9092"
telegraf__conf__outputs__kafka__topic: "telegraf"
telegraf__conf__outputs__kafka__routing_tag: "host"
telegraf__conf__outputs__kafka__compression_codec: 0
telegraf__conf__outputs__kafka__required_acks: -1
telegraf__conf__outputs__kafka__max_retry: 3
telegraf__conf__outputs__kafka__ssl__enabled: false
telegraf__conf__outputs__kafka__ssl__ssl_ca: "/etc/telegraf/ca.pem"
telegraf__conf__outputs__kafka__ssl__ssl_cert: "/etc/telegraf/cert.pem"
telegraf__conf__outputs__kafka__ssl__ssl_key: "/etc/telegraf/key.pem"
telegraf__conf__outputs__kafka__ssl__insecure_skip_verify: false
telegraf__conf__outputs__kafka__data_format: "influx"

# [[outputs.kinesis]]

telegraf__conf__outputs__kinesis__enabled: false
telegraf__conf__outputs__kinesis__region: "ap-southeast-2"
telegraf__conf__outputs__kinesis__access_key: ""
telegraf__conf__outputs__kinesis__secret_key: ""
telegraf__conf__outputs__kinesis__streamname: "StreamName"
telegraf__conf__outputs__kinesis__partitionkey: "PartitionKey"
telegraf__conf__outputs__kinesis__format: "string"
telegraf__conf__outputs__kinesis__debug: false

# [[outputs.librato]]

telegraf__conf__outputs__librato__enabled: false
telegraf__conf__outputs__librato__api_user: "telegraf@influxdb.com"
telegraf__conf__outputs__librato__api_token: "my-secret-token"
telegraf__conf__outputs__librato__debug: false
telegraf__conf__outputs__librato__source_tag: "host"
telegraf__conf__outputs__librato__timeout: "5s"
telegraf__conf__outputs__librato__template: "host.tags.measurement.field"

# [[outputs.mqtt]]

telegraf__conf__outputs__mqtt__enabled: false
telegraf__conf__outputs__mqtt__servers:
    - "localhost:1883"
telegraf__conf__outputs__mqtt__topic_prefix: "telegraf"
telegraf__conf__outputs__mqtt__username: ""
telegraf__conf__outputs__mqtt__password: ""
telegraf__conf__outputs__mqtt__ssl__enabled: false
telegraf__conf__outputs__mqtt__ssl__ssl_ca: "/etc/telegraf/ca.pem"
telegraf__conf__outputs__mqtt__ssl__ssl_cert: "/etc/telegraf/cert.pem"
telegraf__conf__outputs__mqtt__ssl__ssl_key: "/etc/telegraf/key.pem"
telegraf__conf__outputs__mqtt__ssl__insecure_skip_verify: false
telegraf__conf__outputs__mqtt__ssl__data_format: "influx"

# [[outputs.nsq]]

telegraf__conf__outputs__nsq__enabled: false
telegraf__conf__outputs__nsq__server: "localhost:4150"
telegraf__conf__outputs__nsq__topic: "telegraf"
telegraf__conf__outputs__nsq__data_format: "influx"

# [[outputs.opentsdb]]

telegraf__conf__outputs__opentsdb__enabled: false
telegraf__conf__outputs__opentsdb__prefix: "my.specific.prefix."
telegraf__conf__outputs__opentsdb__host: "opentsdb.example.com"
telegraf__conf__outputs__opentsdb__port: 4242
telegraf__conf__outputs__opentsdb__debug: false

# [[outputs.prometheus_client]]

telegraf__conf__outputs__prometheus_client__enabled: false
telegraf__conf__outputs__prometheus_client__listen: ":9126"

# [[outputs.riemann]]

telegraf__conf__outputs__riemann__enabled: false
telegraf__conf__outputs__riemann__url: "localhost:5555"
telegraf__conf__outputs__riemann__transport: "tcp"
telegraf__conf__outputs__riemann__separator: " "

# [[inputs.cpu]]

telegraf__conf__inputs__cpu__enabled: true
telegraf__conf__inputs__cpu__percpu: true
telegraf__conf__inputs__cpu__totalcpu: true
telegraf__conf__inputs__cpu__fielddrop:
    - "time_*"

# [[inputs.disk]]

telegraf__conf__inputs__disk__enabled: true
telegraf__conf__inputs__disk__mount_points: []
telegraf__conf__inputs__disk__ignore_fs:
    - "tmpfs"
    - "devtmpfs"

# [[inputs.diskio]]

telegraf__conf__inputs__diskio__enabled: true
telegraf__conf__inputs__diskio__devices: []
telegraf__conf__inputs__diskio__skip_serial_number: false

# [[inputs.kernel]]

telegraf__conf__inputs__kernel__enabled: true

# [[inputs.mem]]

telegraf__conf__inputs__mem__enabled: true

# [[inputs.processes]]

telegraf__conf__inputs__processes__enabled: true

# [[inputs.swap]]

telegraf__conf__inputs__swap__enabled: true

# [[inputs.system]]

telegraf__conf__inputs__system__enabled: true

# [[inputs.aerospike]]

telegraf__conf__inputs__aerospike__enabled: false
telegraf__conf__inputs__aerospike__servers:
    - "localhost:3000"

# [[inputs.apache]]

telegraf__conf__inputs__apache__enabled: false
telegraf__conf__inputs__apache__urls:
    - "http://localhost/server-status?auto"

# [[inputs.bcache]]

telegraf__conf__inputs__bcache__enabled: false
telegraf__conf__inputs__bcache__bcachePath: "/sys/fs/bcache"
telegraf__conf__inputs__bcache__bcacheDevs:
    - "bcache0"

# [[inputs.cassandra]]

telegraf__conf__inputs__cassandra__enabled: false
telegraf__conf__inputs__cassandra__context: "/jolokia/read"
telegraf__conf__inputs__cassandra__servers:
  - "myuser:mypassword@10.10.10.1:8778"
  - "10.10.10.2:8778"
  - ":8778"
telegraf__conf__inputs__cassandra__metrics:
  - "/java.lang:type=Memory/HeapMemoryUsage"
  - "/org.apache.cassandra.metrics:type=Table,keyspace=*,scope=*,name=ReadLatency"

# [[inputs.ceph]]

telegraf__conf__inputs__ceph__enabled: false
telegraf__conf__inputs__ceph__ceph_binary: "/usr/bin/ceph"
telegraf__conf__inputs__ceph__socket_dir: "/var/run/ceph"
telegraf__conf__inputs__ceph__mon_prefix: "ceph-mon"
telegraf__conf__inputs__ceph__osd_prefix: "ceph-osd"
telegraf__conf__inputs__ceph__socket_suffix: "asok"

# [[inputs.cloudwatch]]

telegraf__conf__inputs__cloudwatch__enabled: false
telegraf__conf__inputs__cloudwatch__region: "us-east-1"
telegraf__conf__inputs__cloudwatch__access_key: ""
telegraf__conf__inputs__cloudwatch__secret_key: ""
telegraf__conf__inputs__cloudwatch__period: "1m"
telegraf__conf__inputs__cloudwatch__delay: "1m"
telegraf__conf__inputs__cloudwatch__interval: "1m"
telegraf__conf__inputs__cloudwatch__namespace: "AWS/ELB"
telegraf__conf__inputs__cloudwatch__metrics__enabled: false
telegraf__conf__inputs__cloudwatch__metrics__names:
  - "Latency"
  - "RequestCount"
telegraf__conf__inputs__cloudwatch__metrics__dimensions__enabled: true
telegraf__conf__inputs__cloudwatch__metrics__dimensions__name: "LoadBalancerName"
telegraf__conf__inputs__cloudwatch__metrics__dimensions__value: "p-example"

# [[inputs.couchbase]]

telegraf__conf__inputs__couchbase__enabled: false
telegraf__conf__inputs__couchbase__servers:
  - "http://localhost:8091"

# [[inputs.couchdb]]

telegraf__conf__inputs__couchdb__enabled: false
telegraf__conf__inputs__couchdb__hosts:
  - "http://localhost:8086/_stats"

# [[inputs.disque]]

telegraf__conf__inputs__disque__enabled: false
telegraf__conf__inputs__disque__servers:
  - "localhost"

# [[inputs.dns_query]]

telegraf__conf__inputs__dns_query__enabled: false
telegraf__conf__inputs__dns_query__servers:
  - "8.8.8.8"
telegraf__conf__inputs__dns_query__domains:
  - "."
telegraf__conf__inputs__dns_query__record_type: "A"
telegraf__conf__inputs__dns_query__port: 53
telegraf__conf__inputs__dns_query__timeout: 2

# [[inputs.docker]]

telegraf__conf__inputs__docker__enabled: false
telegraf__conf__inputs__docker__endpoint: "unix:///var/run/docker.sock"
telegraf__conf__inputs__docker__container_name: []
telegraf__conf__inputs__docker__timepoint: "5s"

# [[inputs.dovecot]]

telegraf__conf__inputs__dovecot__enabled: false
telegraf__conf__inputs__dovecot__servers:
  - "localhost:24242"
telegraf__conf__inputs__dovecot__type: "global"
telegraf__conf__inputs__dovecot__filters:
  - ""

# [[inputs.elasticsearch]]

telegraf__conf__inputs__elasticsearch__enabled: false
telegraf__conf__inputs__elasticsearch__servers:
  - "http://localhost:9200"
telegraf__conf__inputs__elasticsearch__local: true
telegraf__conf__inputs__elasticsearch__cluster_health: false

# [[inputs.exec]]

telegraf__conf__inputs__exec__enabled: false
telegraf__conf__inputs__exec__commands:
  - "/tmp/test.sh"
  - "/usr/bin/mycollector --foo=bar"
telegraf__conf__inputs__exec__timeout: "5s"
telegraf__conf__inputs__exec__name_suffix: "_mycollector"
telegraf__conf__inputs__exec__data_format: "influx"

# [[inputs.filestat]]

telegraf__conf__inputs__filestat__enabled: false
telegraf__conf__inputs__filestat__files:
  - "/var/log/**.log"
telegraf__conf__inputs__filestat__md5: false

# [[inputs.haproxy]]

telegraf__conf__inputs__haproxy__enabled: false
telegraf__conf__inputs__haproxy__servers:
  - "http://myhaproxy.com:1936"
  - "http://anotherhaproxy.com:1936"

# [[inputs.http_response]]

telegraf__conf__inputs__http_response__enabled: false
telegraf__conf__inputs__http_response__address: "http://github.com"
telegraf__conf__inputs__http_response__response_timeout: "5s"
telegraf__conf__inputs__http_response__method: "GET"
telegraf__conf__inputs__http_response__follow_redirects: true
telegraf__conf__inputs__http_response__headers__enabled: false
telegraf__conf__inputs__http_response__headers__host: "github.com"
telegraf__conf__inputs__http_response__headers__body: ""

# [[inputs.httpjson]]

# see full structure on docs/inputs.httpjson.md
telegraf__conf__inputs__httpjson: []
